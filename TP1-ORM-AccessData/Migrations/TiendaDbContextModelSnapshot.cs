// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1_ORM_AccessData.Data;

#nullable disable

namespace TP1_ORM_AccessData.Migrations
{
    [DbContext(typeof(TiendaDbContext))]
    partial class TiendaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Carrito", b =>
                {
                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("CarritoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carrito", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.CarritoProducto", b =>
                {
                    b.Property<Guid?>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("CarritoId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProducto", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DNI");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Orden", b =>
                {
                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("OrdenId");

                    b.HasIndex("CarritoId")
                        .IsUnique();

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ProductoId");

                    b.ToTable("Producto", (string)null);

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Codigo = "20923",
                            Descripcion = "Es una remera de mangas cortas, de caida recta, totalmente ideada para que luzcas nuestra marca con tu mejor potencial.",
                            Image = "https://www.billabong.com.ar/productos/remera-wave2/?variant=429183626",
                            Marca = "Billabong",
                            Nombre = "Remera Wave",
                            Precio = 5499m
                        },
                        new
                        {
                            ProductoId = 2,
                            Codigo = "20924",
                            Descripcion = "Big Wave es una remera básica con estampa de marca de lado del frente. Novedad de esta temporada Winter22. Realizada con algodón sustentable",
                            Image = "https://www.billabong.com.ar/productos/remera-big-wave/?variant=419245581",
                            Marca = "Billabong",
                            Nombre = "Remera Big Wave",
                            Precio = 5999m
                        },
                        new
                        {
                            ProductoId = 3,
                            Codigo = "92364",
                            Descripcion = " Remera Rip Curl. Relaxed Fit. Estampa frente y espalda. Estampa interna de marca y logo. Grifa logo. 100% Algodón. Jersey 16/1.",
                            Image = "https://www.ripcurlargentina.com/producto_detalle///remerarip_curl_crecent/23284.html",
                            Marca = "Rip Curl",
                            Nombre = "Remera Rip Curl Crecent",
                            Precio = 7999m
                        },
                        new
                        {
                            ProductoId = 4,
                            Codigo = "3084",
                            Descripcion = "Reloj Rip Curl Detroit.CUADRANTE: 3 agujas. CARCASA: Acero inoxidable de calidad marina. Lente de cristal mineral Enchapado Iónico. Sumergible hasta 100m. Ancho:48mm. MALLA:Cuero",
                            Image = "https://www.ripcurlargentina.com/producto_detalle///relojrip_curl_detroit/7252.html",
                            Marca = "Rip Curl",
                            Nombre = "Reloj Rip Curl Detroit",
                            Precio = 69999m
                        },
                        new
                        {
                            ProductoId = 5,
                            Codigo = "3097",
                            Descripcion = "Billetera Rip Curl 2 en 1.  100% cuero. Protección RFID. Nota gemela. Moneda con cremallera. Varias ranuras para tarjetas. Cartera delgada extraíble. Ventana de identificación.",
                            Image = "https://www.ripcurlargentina.com/producto_detalle///billeterarip_curl_2_en_1/12729.html",
                            Marca = "Rip Curl",
                            Nombre = "Billetera Rip Curl 2 en 1",
                            Precio = 8999m
                        },
                        new
                        {
                            ProductoId = 6,
                            Codigo = "3065",
                            Descripcion = "Jogging Rip Curl Logo. Rustico invisible Jogging. Standard fit. Cintura y punos con elastico. Heattransfers logo. Cordon de ajuste al tono. Multietiquetas. 100% Algodon.",
                            Image = "https://www.ripcurlargentina.com/producto_detalle///joggingrip_curl_logo/23364.html",
                            Marca = "Rip Curl",
                            Nombre = "Jogging Rip Curl Logo",
                            Precio = 17999m
                        },
                        new
                        {
                            ProductoId = 7,
                            Codigo = "102034",
                            Descripcion = "Remera manga corta Tela: Jersey vigore Fit: Regular Back de talle estampado Tela:100% Algodón",
                            Image = "https://www.quiksilver.com.ar/remera-mc-mirror-logo-neg-quiksilver",
                            Marca = "Quiksilver",
                            Nombre = "Remera MC Mirror",
                            Precio = 5999m
                        },
                        new
                        {
                            ProductoId = 8,
                            Codigo = "108115",
                            Descripcion = "TELA: Algodón / Poliéster. Buzo bosa. Tela: Frisa pesada Vigore. Fit: Regular. Estampa en pecho",
                            Image = "https://www.quiksilver.com.ar/buzo-comp-logo-azul-quiksilver",
                            Marca = "Quiksilver",
                            Nombre = "Buzo Comp Logo Azul",
                            Precio = 13499m
                        },
                        new
                        {
                            ProductoId = 9,
                            Codigo = "112007",
                            Descripcion = "Zapatilla Bota de caña baja realizada en cuero vacuno descarne y textil. Suela de eva inyectada para mayor confort",
                            Image = "https://www.quiksilver.com.ar/zapatillas-fujia-olv-quiksilver",
                            Marca = "Quiksilver",
                            Nombre = "Zapatillas Fujia Olv",
                            Precio = 25999m
                        },
                        new
                        {
                            ProductoId = 10,
                            Codigo = "92753",
                            Descripcion = "El Fundamental es un buzo básico de escote redondo con una etiqueta grifa de Billabong en el pecho que traemos y mejoramos todas las temporadas. Ideal para usarlo todos los días y en todo momento.",
                            Image = "https://www.billabong.com.ar/productos/buzo-fundamental-crew/?variant=426790535",
                            Marca = "Billabong",
                            Nombre = "Buzo Fundamental Crew",
                            Precio = 12499m
                        });
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Carrito", b =>
                {
                    b.HasOne("TP1_ORM_AccessData.Entities.Cliente", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.CarritoProducto", b =>
                {
                    b.HasOne("TP1_ORM_AccessData.Entities.Carrito", "Carrito")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1_ORM_AccessData.Entities.Producto", "Producto")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Orden", b =>
                {
                    b.HasOne("TP1_ORM_AccessData.Entities.Carrito", "Carrito")
                        .WithOne("Orden")
                        .HasForeignKey("TP1_ORM_AccessData.Entities.Orden", "CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Carrito", b =>
                {
                    b.Navigation("CarritoProductos");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Cliente", b =>
                {
                    b.Navigation("Carritos");
                });

            modelBuilder.Entity("TP1_ORM_AccessData.Entities.Producto", b =>
                {
                    b.Navigation("CarritoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
